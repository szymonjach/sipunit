plugins {
    id 'java'
    id 'maven-publish'
    id 'org.unbroken-dome.xjc' version '1.4.3'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://oss.sonatype.org/content/groups/public'
    }

    maven {
        url = 'https://repository.jboss.org/nexus/content/groups/public/'
    }

    maven {
        url = 'https://maven.java.net/content/groups/public/'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    implementation group: 'com.jayway.awaitility', name: 'awaitility', version: '1.6.3'
    implementation group: 'javax.sip', name: 'jain-sip-api', version: '1.2.1.4'
    implementation group: 'javax.sip', name: 'jain-sip-ri', version: '1.2.244'
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.29'

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation 'com.sun.xml.bind:jaxb-osgi:2.4.0-b180830.0438'
    implementation 'com.sun.activation:javax.activation:1.2.0'

    testImplementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.29'
}

group = 'org.mobicents.sipunit'
version = '2.0.6-SNAPSHOT'
description = 'SipUnit'
sourceCompatibility = '1.11'

xjc {
    includeInMainCompilation = false
}

xjcGenerate {
    source = fileTree('conf/') {
        include '*.xsd'
    }
    targetPackage = "org.cafesip.sipunit.presenceparser.pidf"
}

tasks.compileJava.dependsOn xjcGenerate

processResources {
    with copySpec {
        from 'src/main/resources/org/cafesip/sipunit/presenceparser/pidf/jaxb.properties'
        expand project.properties
    }
}

sourceSets {
    main {
        java {
            srcDir xjcGenerate.outputDirectory
        }
    }
    test {
        java {
            srcDir xjcGenerate.outputDirectory
        }
    }
}

clean {
    delete "$rootDir/test*.txt"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from(sourceSets.main.allJava)
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from(javadoc.destinationDir)
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            artifact(sourcesJar)
            artifact(javadocJar)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
